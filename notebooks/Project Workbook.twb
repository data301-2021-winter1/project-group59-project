<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook original-version='18.1' source-build='2021.3.3 (20213.21.1018.0949)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='New_Data' inline='true' name='federated.1ko8lzu1jzgw1819why9p1j9vxg1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='New_Data' name='textscan.0xz59kl1kxlztg1g111lk10rta3v'>
            <connection class='textscan' directory='C:/Users/Mathew/year5/DATA301/project-group59-project/notebooks/ungraded' filename='New_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0xz59kl1kxlztg1g111lk10rta3v' name='New_Data.csv' table='[New_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Draw' ordinal='1' />
            <column datatype='real' name='Resign' ordinal='2' />
            <column datatype='real' name='Checkmate' ordinal='3' />
            <column datatype='real' name='Out of Time' ordinal='4' />
            <column datatype='real' name='Total Games' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0xz59kl1kxlztg1g111lk10rta3v' name='New_Data.csv' table='[New_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Draw' ordinal='1' />
            <column datatype='real' name='Resign' ordinal='2' />
            <column datatype='real' name='Checkmate' ordinal='3' />
            <column datatype='real' name='Out of Time' ordinal='4' />
            <column datatype='real' name='Total Games' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[New_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[New_Data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[New_Data.csv_2DE7DA34009A478F8F237F5C756DA81C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Draw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Draw]</local-name>
            <parent-name>[New_Data.csv]</parent-name>
            <remote-alias>Draw</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[New_Data.csv_2DE7DA34009A478F8F237F5C756DA81C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Resign</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Resign]</local-name>
            <parent-name>[New_Data.csv]</parent-name>
            <remote-alias>Resign</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[New_Data.csv_2DE7DA34009A478F8F237F5C756DA81C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Checkmate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Checkmate]</local-name>
            <parent-name>[New_Data.csv]</parent-name>
            <remote-alias>Checkmate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[New_Data.csv_2DE7DA34009A478F8F237F5C756DA81C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Out of Time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Out of Time]</local-name>
            <parent-name>[New_Data.csv]</parent-name>
            <remote-alias>Out of Time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[New_Data.csv_2DE7DA34009A478F8F237F5C756DA81C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Games</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Games]</local-name>
            <parent-name>[New_Data.csv]</parent-name>
            <remote-alias>Total Games</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[New_Data.csv_2DE7DA34009A478F8F237F5C756DA81C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Win Rate ' datatype='real' name='[Calculation_2328923999841853455]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Checkmate]/[Total Games]' />
      </column>
      <column caption='Average Draw' datatype='real' name='[Calculation_2328923999847936019]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Draw]/[Total Games]' />
      </column>
      <column caption='Average Resign ' datatype='real' name='[Calculation_2328923999849152532]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Resign]/[Total Games]' />
      </column>
      <column caption='logdown' datatype='real' name='[Calculation_2328923999859425302]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LOG([Total Games]+1)' />
      </column>
      <column caption='Calculation1' datatype='boolean' name='[Calculation_2328923999860830231]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Checkmate]&lt;={PERCENTILE([Checkmate],.95)}' />
      </column>
      <column caption='Average Out of Time' datatype='real' name='[Calculation_2328923999867830298]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Out of Time]/[Total Games]' />
      </column>
      <column datatype='real' name='[Checkmate]' role='measure' type='quantitative' />
      <column caption='Opening Strategies' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column datatype='real' name='[Total Games]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='New_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[New_Data.csv_2DE7DA34009A478F8F237F5C756DA81C]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[logdown (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[Calculation_2328923999859425302]' peg='0' size='0.1' />
      </column>
      <column-instance column='[Total Games]' derivation='Avg' name='[avg:Total Games:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2328923999841853455]' derivation='Sum' name='[sum:Calculation_2328923999841853455:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2328923999847936019]' derivation='Sum' name='[sum:Calculation_2328923999847936019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2328923999849152532]' derivation='Sum' name='[sum:Calculation_2328923999849152532:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2328923999867830298]' derivation='Sum' name='[sum:Calculation_2328923999867830298:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Checkmate]' derivation='Sum' name='[sum:Checkmate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Games]' derivation='Sum' name='[sum:Total Games:qk]' pivot='key' type='quantitative' />
      <group caption='Others' name='[Opening Strategies Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter from='&quot;Alekhine Defense&quot;' function='range' level='[F1]' to='&quot;Anderssen Opening&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Barnes Defense&quot;' />
          <groupfilter from='&quot;Benko Gambit&quot;' function='range' level='[F1]' to='&quot;Bird Opening&quot;' />
          <groupfilter from='&quot;Blackmar-Diemer Gambit&quot;' function='range' level='[F1]' to='&quot;Canard Opening&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Carr Defense&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Catalan Opening&quot;' />
          <groupfilter from='&quot;Clemenz Opening&quot;' function='range' level='[F1]' to='&quot;Creepy Crawly Formation&quot;' />
          <groupfilter from='&quot;Danish Gambit&quot;' function='range' level='[F1]' to='&quot;English Defense&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Englund Gambit&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Englund Gambit Complex&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Franco-Benoni Defense&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Gedult&apos;s Opening&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Giuoco Piano&quot;' />
          <groupfilter from='&quot;Goldsmith Defense&quot;' function='range' level='[F1]' to='&quot;Horwitz Defense&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Kadas Opening&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Kangaroo Defense&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;King&apos;s Indian Attack&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;King&apos;s Indian Defense&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;King&apos;s Pawn&quot;' />
          <groupfilter from='&quot;King&apos;s Pawn Opening&quot;' function='range' level='[F1]' to='&quot;Mikenas Defense&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Nimzo-Indian Defense&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Nimzo-Larsen Attack&quot;' />
          <groupfilter from='&quot;Nimzowitsch-Larsen Attack&quot;' function='range' level='[F1]' to='&quot;Petrov&apos;s Defense&quot;' />
          <groupfilter from='&quot;Polish Defense&quot;' function='range' level='[F1]' to='&quot;Pterodactyl Defense&quot;' />
          <groupfilter from='&quot;Queen&apos;s Indian Accelerated&quot;' function='range' level='[F1]' to='&quot;Queen&apos;s Pawn&quot;' />
          <groupfilter from='&quot;Queen&apos;s Pawn Opening&quot;' function='range' level='[F1]' to='&quot;Robatsch (Modern) Defense&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Saragossa Opening&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Scotch Gambit&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Semi-Bononi&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Semi-Slav Defense&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Slav Defense&quot;' />
          <groupfilter from='&quot;Sodium Attack&quot;' function='range' level='[F1]' to='&quot;Trompowsky Attack&quot;' />
          <groupfilter function='member' level='[F1]' member='&quot;Van Geet Opening&quot;' />
          <groupfilter from='&quot;Vienna Game&quot;' function='range' level='[F1]' to='&quot;Yusupov-Rubinstein System&quot;' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[avg:Total Games:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Total Games:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Calculation_2328923999847936019:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Calculation_2328923999841853455:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[usr:Calculation_2328923999862911000:qk:1]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Calculation_2328923999866302489:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Calculation_2328923999849152532:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Checkmate:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Calculation_2328923999867830298:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:F1:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australian Defense&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Center Game&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Giuoco Piano&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nimzowitsch-Larsen Attack&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Semi-Bononi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Torre Attack&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Czech Defense&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala Defense&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;London System&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philidor Defense&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portuguese Opening&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slav Defense&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. George Defense&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Danish Gambit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Indian Defense&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;King&apos;s Knight Opening&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;King&apos;s Pawn Game&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neo-Gruenfeld Defense&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paleface Attack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yusupov-Rubinstein System&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Borg Defense&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carr Defense&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kadas Opening&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mieses Opening&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Old Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zukertort Opening&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barnes Opening&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benoni Defense&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Englund Gambit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pirc Defense&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Queen&apos;s Pawn Opening&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sodium Attack&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Budapest Defense&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gedult&apos;s Opening&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Modern Defense&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Petrov&apos;s Defense&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Queen&apos;s Indian Accelerated&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Queen&apos;s Pawn Game&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rubinstein Opening&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bogo-Indian Defense&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clemenz Opening&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;English Opening&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grob Opening&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Old Benoni Defense&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Owen Defense&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alekhine Defense&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dutch Defense&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Global Opening&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hippopotamus Defense&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexican Defense&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Queen&apos;s Gambit&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Queen&apos;s Indian Defense&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amazon Attack&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Blackmar-Diemer Gambit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nimzo-Larsen Attack&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Petrov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Polish Defense&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Van&apos;t Kruijs Opening&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anderssen Opening&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;French Defense&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungarian Opening&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;King&apos;s Pawn Opening&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rat Defense&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richter-Veresov Attack&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slav Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bishop&apos;s Opening&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Colle System&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Creepy Crawly Formation&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ponziani Opening&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pterodactyl Defense&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Three Knights Opening&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crab Opening&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Franco-Benoni Defense&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Queen&apos;s Pawn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saragossa Opening&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scotch Game&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;System&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benko Gambit&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caro-Kann Defense&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;English Defense&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Goldsmith Defense&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tarrasch Defense&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vienna Game&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bird Opening&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Catalan Opening&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kangaroo Defense&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reti Opening&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scandinavian Defense&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trompowsky Attack&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amar Opening&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canard Opening&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;King&apos;s Indian Attack&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russian Game&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Van Geet Opening&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ware Defense&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elephant Gambit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvian Gambit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nimzowitsch Defense&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Old Indian Defense&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scotch Gambit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sicilian Defense&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Valencia Opening&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gunderam Defense&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Horwitz Defense&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Irish Gambit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;King&apos;s Pawn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robatsch (Modern) Defense&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ruy Lopez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Semi-Slav Defense&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Englund Gambit Complex&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Four Knights Game&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lemming Defense&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mikenas Defense&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nimzo-Indian Defense&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wade Defense&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barnes Defense&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blumenfeld Countergambit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Doery Defense&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gruenfeld Defense&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indian Game&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;King&apos;s Indian Defense&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Duras Gambit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italian Game&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;King&apos;s Gambit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;King&apos;s Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lion Defense&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Polish Opening&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ware Opening&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='Draw' />
        <field-sort-custom-order field='Resign' />
        <field-sort-custom-order field='Checkmate' />
        <field-sort-custom-order field='Out of Time' />
        <field-sort-custom-order field='Total Games' />
        <field-sort-custom-order field='Calculation_2328923999859425302' />
        <field-sort-custom-order field='Calculation_2328923999841853455' />
        <field-sort-custom-order field='Calculation_2328923999847936019' />
        <field-sort-custom-order field='Calculation_2328923999849152532' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='New_Data.csv' id='New_Data.csv_2DE7DA34009A478F8F237F5C756DA81C'>
            <properties context=''>
              <relation connection='textscan.0xz59kl1kxlztg1g111lk10rta3v' name='New_Data.csv' table='[New_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='real' name='Draw' ordinal='1' />
                  <column datatype='real' name='Resign' ordinal='2' />
                  <column datatype='real' name='Checkmate' ordinal='3' />
                  <column datatype='real' name='Out of Time' ordinal='4' />
                  <column datatype='real' name='Total Games' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='tableau' inline='true' name='federated.0p0l15q0fep2z219k9qvw1qtzlia' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau' name='textscan.19oqwao0euzrer1crcre01vjwjk8'>
            <connection class='textscan' directory='C:/Users/Mathew/year5/DATA301/project-group59-project/notebooks' filename='tableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.19oqwao0euzrer1crcre01vjwjk8' name='tableau.csv' table='[tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='turns' ordinal='1' />
            <column datatype='string' name='winner' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.19oqwao0euzrer1crcre01vjwjk8' name='tableau.csv' table='[tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='turns' ordinal='1' />
            <column datatype='string' name='winner' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[tableau.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tableau.csv_7F32686CCCB549FDBB6A8EEABF418D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>turns</remote-name>
            <remote-type>20</remote-type>
            <local-name>[turns]</local-name>
            <parent-name>[tableau.csv]</parent-name>
            <remote-alias>turns</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tableau.csv_7F32686CCCB549FDBB6A8EEABF418D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[tableau.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tableau.csv_7F32686CCCB549FDBB6A8EEABF418D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Turns (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[turns]' peg='0' size='2' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='tableau.csv' datatype='table' name='[__tableau_internal_object_id__].[tableau.csv_7F32686CCCB549FDBB6A8EEABF418D02]' role='measure' type='quantitative' />
      <column caption='Turns' datatype='integer' name='[turns]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='tableau.csv' id='tableau.csv_7F32686CCCB549FDBB6A8EEABF418D02'>
            <properties context=''>
              <relation connection='textscan.19oqwao0euzrer1crcre01vjwjk8' name='tableau.csv' table='[tableau#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='turns' ordinal='1' />
                  <column datatype='string' name='winner' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='tableau (2)' inline='true' name='federated.17g4u540hb4uag18nmh0d0mhzrc3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau' name='textscan.02q7m4a0bhlucw17nnpfv13oi59i'>
            <connection class='textscan' directory='C:/Users/Mathew/year5/DATA301/project-group59-project/notebooks' filename='tableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.02q7m4a0bhlucw17nnpfv13oi59i' name='tableau.csv' table='[tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='turns' ordinal='1' />
            <column datatype='string' name='winner' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.02q7m4a0bhlucw17nnpfv13oi59i' name='tableau.csv' table='[tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='turns' ordinal='1' />
            <column datatype='string' name='winner' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[tableau.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tableau.csv_2DD44842EF0A437697DB243F464B1C5A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>turns</remote-name>
            <remote-type>20</remote-type>
            <local-name>[turns]</local-name>
            <parent-name>[tableau.csv]</parent-name>
            <remote-alias>turns</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tableau.csv_2DD44842EF0A437697DB243F464B1C5A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[tableau.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tableau.csv_2DD44842EF0A437697DB243F464B1C5A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='tableau.csv' datatype='table' name='[__tableau_internal_object_id__].[tableau.csv_2DD44842EF0A437697DB243F464B1C5A]' role='measure' type='quantitative' />
      <column caption='Turns' datatype='integer' name='[turns]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='tableau.csv' id='tableau.csv_2DD44842EF0A437697DB243F464B1C5A'>
            <properties context=''>
              <relation connection='textscan.02q7m4a0bhlucw17nnpfv13oi59i' name='tableau.csv' table='[tableau#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='turns' ordinal='1' />
                  <column datatype='string' name='winner' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Average Outcome of Each Strategy with at least 300 games'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Break of  Outcome of Each Strategy with at least 300 games played</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='New_Data' name='federated.1ko8lzu1jzgw1819why9p1j9vxg1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ko8lzu1jzgw1819why9p1j9vxg1'>
            <column caption='Average Win Rate ' datatype='real' name='[Calculation_2328923999841853455]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Checkmate]/[Total Games]' />
            </column>
            <column caption='Average Draw' datatype='real' name='[Calculation_2328923999847936019]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Draw]/[Total Games]' />
            </column>
            <column caption='Average Resign ' datatype='real' name='[Calculation_2328923999849152532]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Resign]/[Total Games]' />
            </column>
            <column caption='Average Out of Time' datatype='real' name='[Calculation_2328923999867830298]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Out of Time]/[Total Games]' />
            </column>
            <column datatype='real' name='[Checkmate]' role='measure' type='quantitative' />
            <column datatype='real' name='[Draw]' role='measure' type='quantitative' />
            <column caption='Opening Strategies' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column datatype='real' name='[Out of Time]' role='measure' type='quantitative' />
            <column datatype='real' name='[Resign]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Games]' role='measure' type='quantitative' />
            <column-instance column='[Total Games]' derivation='Min' name='[min:Total Games:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2328923999841853455]' derivation='Sum' name='[sum:Calculation_2328923999841853455:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2328923999847936019]' derivation='Sum' name='[sum:Calculation_2328923999847936019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2328923999849152532]' derivation='Sum' name='[sum:Calculation_2328923999849152532:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2328923999867830298]' derivation='Sum' name='[sum:Calculation_2328923999867830298:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Calculation_2328923999847936019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Calculation_2328923999867830298:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Calculation_2328923999849152532:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Calculation_2328923999841853455:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[min:Total Games:qk]' included-values='in-range'>
            <min>300.0</min>
          </filter>
          <filter class='categorical' column='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:F1:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Amar Opening&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Australian Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Blackmar-Diemer Gambit&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Blumenfeld Countergambit&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Borg Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Budapest Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Canard Opening&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Catalan Opening&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Center Game&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Clemenz Opening&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Colle System&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Crab Opening&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Creepy Crawly Formation&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Czech Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Doery Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Franco-Benoni Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Global Opening&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Goldsmith Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Guatemala Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Gunderam Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Hippopotamus Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Irish Gambit&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Kangaroo Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;King&apos;s Indian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;King&apos;s Pawn&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;King&apos;s Pawn Opening&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Latvian Gambit&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Lemming Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Lion Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Mexican Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Nimzowitsch-Larsen Attack&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Old Indian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Paleface Attack&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Polish Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Portuguese Opening&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Pterodactyl Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Queen&apos;s Indian Accelerated&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Queen&apos;s Pawn Opening&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Rubinstein Opening&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Saragossa Opening&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Scotch Gambit&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Semi-Bononi&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Slav Indian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Sodium Attack&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;System&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Tarrasch Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Valencia Opening&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Wade Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Ware Defense&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Yusupov-Rubinstein System&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Calculation_2328923999841853455:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]</column>
            <column>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[:Measure Names]</column>
            <column>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[min:Total Games:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[Multiple Values]' value='21' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]' value='40' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#76b7b2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='241' />
                <format attr='maxwidth' value='241' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='241' />
                <format attr='maxwidth' value='241' />
                <format attr='minheight' value='1560' />
                <format attr='maxheight' value='1560' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]</rows>
        <cols>([federated.1ko8lzu1jzgw1819why9p1j9vxg1].[:Measure Names] * [federated.1ko8lzu1jzgw1819why9p1j9vxg1].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{10CE2A73-35F7-4CD4-8360-F1EBB2813833}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='tableau' name='federated.0p0l15q0fep2z219k9qvw1qtzlia' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0l15q0fep2z219k9qvw1qtzlia'>
            <column aggregation='None' datatype='integer' name='[Turns (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[turns]' peg='0' size='2' />
            </column>
            <column-instance column='[turns]' derivation='Count' name='[cnt:turns:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Turns (bin)]' derivation='None' name='[none:Turns (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Turns' datatype='integer' name='[turns]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.0p0l15q0fep2z219k9qvw1qtzlia].[cnt:turns:qk]</rows>
        <cols>[federated.0p0l15q0fep2z219k9qvw1qtzlia].[none:Turns (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0p0l15q0fep2z219k9qvw1qtzlia].[Turns (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{37532F17-34B4-4F32-8577-27E14F366781}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='tableau' name='federated.0p0l15q0fep2z219k9qvw1qtzlia' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0l15q0fep2z219k9qvw1qtzlia'>
            <column aggregation='None' datatype='integer' name='[Turns (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[turns]' peg='0' size='2' />
            </column>
            <column-instance column='[turns]' derivation='Count' name='[cnt:turns:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Turns (bin)]' derivation='None' name='[none:Turns (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Turns' datatype='integer' name='[turns]' role='measure' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.0p0l15q0fep2z219k9qvw1qtzlia].[cnt:turns:qk]</rows>
        <cols>([federated.0p0l15q0fep2z219k9qvw1qtzlia].[none:winner:nk] * [federated.0p0l15q0fep2z219k9qvw1qtzlia].[none:Turns (bin):qk])</cols>
      </table>
      <simple-id uuid='{22B224A9-7CA4-42E5-980A-AAC85EC47796}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='tableau' name='federated.0p0l15q0fep2z219k9qvw1qtzlia' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0l15q0fep2z219k9qvw1qtzlia'>
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[Turns (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[turns]' peg='0' size='2' />
            </column>
            <column-instance column='[F1]' derivation='Count' name='[cnt:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[turns]' derivation='Median' name='[med:turns:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Turns (bin)]' derivation='None' name='[none:Turns (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[turns]' derivation='Stdev' name='[std:turns:qk]' pivot='key' type='quantitative' />
            <column caption='Turns' datatype='integer' name='[turns]' role='measure' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0p0l15q0fep2z219k9qvw1qtzlia].[cnt:F1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0p0l15q0fep2z219k9qvw1qtzlia].[none:Turns (bin):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0p0l15q0fep2z219k9qvw1qtzlia].[med:turns:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0p0l15q0fep2z219k9qvw1qtzlia].[std:turns:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0p0l15q0fep2z219k9qvw1qtzlia].[none:winner:nk]</rows>
        <cols>([federated.0p0l15q0fep2z219k9qvw1qtzlia].[cnt:F1:qk] + ([federated.0p0l15q0fep2z219k9qvw1qtzlia].[none:Turns (bin):qk] + ([federated.0p0l15q0fep2z219k9qvw1qtzlia].[med:turns:qk] + [federated.0p0l15q0fep2z219k9qvw1qtzlia].[std:turns:qk])))</cols>
      </table>
      <simple-id uuid='{45FCD581-1B1E-411C-9001-5126FF9E827F}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pie Chart of Checkmates per Strategy </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='New_Data' name='federated.1ko8lzu1jzgw1819why9p1j9vxg1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ko8lzu1jzgw1819why9p1j9vxg1'>
            <column datatype='real' name='[Checkmate]' role='measure' type='quantitative' />
            <column caption='Opening Strategies' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Checkmate]' derivation='Sum' name='[sum:Checkmate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]' direction='ASC' using='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Checkmate:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='907' />
            <format attr='height' value='490' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]' />
              <wedge-size column='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Checkmate:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.813093900680542' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{16F5F413-B5AC-4894-99C9-E995A4168C67}' />
    </worksheet>
    <worksheet name='Top 10 Strats Used'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Most Popular Strategy Used</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='New_Data' name='federated.1ko8lzu1jzgw1819why9p1j9vxg1' />
          </datasources>
          <datasource-dependencies datasource='federated.1ko8lzu1jzgw1819why9p1j9vxg1'>
            <column caption='Opening Strategies' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total Games]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Games]' derivation='Sum' name='[sum:Total Games:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;English Opening&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;French Defense&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Italian Game&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;King&apos;s Pawn Game&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Philidor Defense&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Queen&apos;s Gambit&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Queen&apos;s Pawn Game&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Ruy Lopez&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Scandinavian Defense&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Sicilian Defense&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Total Games:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[sum:Total Games:qk]</rows>
        <cols>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]</cols>
      </table>
      <simple-id uuid='{E6DB102F-FA06-49A1-AD16-74CB2FF8F4B9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Opening Strategeies in Chess: </run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='font-family' value='Bahnschrift SemiBold' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='59750' id='29' param='vert' type-v2='layout-flow' w='98400' x='800' y='39250'>
            <zone h='59750' id='23' param='vert' type-v2='layout-flow' w='98400' x='800' y='39250'>
              <zone h='59750' id='14' param='horz' type-v2='layout-flow' w='98400' x='800' y='39250'>
                <zone h='59750' id='12' type-v2='layout-basic' w='98400' x='800' y='39250'>
                  <zone h='59750' id='11' name='Sheet 2' w='98400' x='800' y='39250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='34250' id='9' name='Top 10 Strats Used' w='98400' x='800' y='5000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='19' h='4000' id='30' is-fixed='true' type-v2='title' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Opening Strategeies in Chess: </run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='37' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='19' h='4000' id='30' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='34250' id='9' is-fixed='true' name='Top 10 Strats Used' w='98400' x='800' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59750' id='11' is-fixed='true' name='Sheet 2' w='98400' x='800' y='39250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DEA9F6A0-4FE7-4A08-AF46-AE9AEC0906C9}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='3' name='Average Outcome of Each Strategy with at least 300 games' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#4e79a7' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='4' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='13' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Average Outcome of Each Strategy with at least 300 games' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='4' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F008D9CB-DEE8-43E9-9777-CFB6941A4195}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='3' name='Sheet 11' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='7' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Sheet 11' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A54A23FC-FEC1-41E3-8E7A-DCE9499E2189}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='81125' id='3' name='Sheet 12' w='98400' x='800' y='17875'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='16875' id='5' name='Sheet 13' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='9' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='8' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='127' h='16875' id='5' is-fixed='true' name='Sheet 13' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='81125' id='3' is-fixed='true' name='Sheet 12' w='98400' x='800' y='17875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{152428BC-7949-4B23-8185-173260A3AB45}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6BF0C1DA-4434-44B0-AF29-038D6E772F76}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0l15q0fep2z219k9qvw1qtzlia].[none:Turns (bin):qk]</field>
            <field>[federated.0p0l15q0fep2z219k9qvw1qtzlia].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E21AAE68-4056-41DC-8D64-05436FCCEB6D}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0l15q0fep2z219k9qvw1qtzlia].[none:Turns (bin):qk]</field>
            <field>[federated.0p0l15q0fep2z219k9qvw1qtzlia].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3827216B-495E-4B01-B9DC-2F2B0D3DC27D}' />
    </window>
    <window class='worksheet' name='Top 10 Strats Used'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[:Measure Names]</field>
            <field>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DB20CFA-75FF-4566-A855-0AED2FAEC5B4}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[:Measure Names]</field>
            <field>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]</field>
            <field>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:Total Games (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0128AA3-8270-4978-B6F0-A142133884C8}' />
    </window>
    <window class='worksheet' name='Average Outcome of Each Strategy with at least 300 games'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]</field>
            <field>[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:logdown (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B1D5DE12-6B3C-4014-AE19-F3C2F214945A}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 2'>
          <highlight field='[federated.1ko8lzu1jzgw1819why9p1j9vxg1].[none:F1:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top 10 Strats Used'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{65562FF3-5F4D-4C64-8A97-EF0BF2A5ACCD}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Average Outcome of Each Strategy with at least 300 games' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C031DABC-BBE1-4DE4-A52F-67B14B923BCD}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Sheet 11'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C1F81FD3-0118-4F13-B2D0-5521C4652C34}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Sheet 12'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 13' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AC1CA0CC-C749-4465-9593-958C0A462E83}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Outcome of Each Strategy with at least 300 games' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      vVfDnxL/H2PO33mXC/jnAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      nWTEVmUo8bYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      r3k0UDdrNx0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='103' name='Sheet 13' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Strats Used' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
